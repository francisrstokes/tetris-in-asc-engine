{"version":3,"sources":["node_modules/vec-la-fp/dist/vec.module.js","node_modules/asc-engine/src/constants.js","node_modules/asc-engine/src/util.js","node_modules/asc-engine/src/GameState.js","node_modules/asc-engine/src/Input.js","node_modules/asc-engine/src/PubSub.js","node_modules/asc-engine/src/Renderer.js","node_modules/asc-engine/src/Game.js","node_modules/asc-engine/src/Area.js","node_modules/asc-engine/src/Tile.js","node_modules/asc-engine/src/Animation.js","index.js"],"names":["require","vAdd","LAYERS","posFromGridIndex","Game","Area","Tile","Animation","game","toGameArea","createScreenRegion","area","size","toTitleArea","toScoreArea","title","HUD","score","update","x","char","PAW","PAH","createLineAnimation","y","Array","from","length","_","i","tile","pos","animations","FRAME_TIME","lastTime","Date","now","currentTime","moduloAddition","a","b","c","Math","abs","pieces","instanceTiles","FG","nextPiece","random","nextTile","instance","piece","state","next","gameState","keyStates","lockedKeyAction","key","action","input","keyIsDown","updateLockStates","Object","keys","forEach","ks","checkCollision","collision","blocked","row","cell","nx","ny","onUpdate","mLeft","mRight","rLeft","rRight","nextPos","nextState","rate","lines","filled","every","Boolean","splice","ani","start","push","unshift","bonus","round","some","active","onDraw","renderer","clearBackground","setTileSize","grid","t","width","height","drawTile","draw","S","addProperty","F","tiles","gameArea","setGrid","setCurrentArea"],"mappingstBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;eC9DeA,OAAO,CAAC,WAAD;IAAfC,gBAAAA;;gBACUD,OAAO,CAAC,0BAAD;IAAjBE,mBAAAA;;gBACoBF,OAAO,CAAC,qBAAD;IAA3BG,6BAAAA;;AACP,IAAMC,IAAI,GAAGJ,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMM,IAAI,GAAGN,OAAO,CAAC,qBAAD,CAApB;;AACA,IAAMO,SAAS,GAAGP,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAMQ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","file":"tetris.e31bb0bc.map","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// curry :: (a -> b -> ... -> n) -> (a -> b) -> (b -> ...) -> (... -> n)\nvar curry = function curry(fn) {\n  var curried = function curried() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length >= fn.length) {\n      return fn.apply(undefined, args);\n    }\n    return function () {\n      for (var _len2 = arguments.length, argsNext = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        argsNext[_key2] = arguments[_key2];\n      }\n\n      return curried.apply(undefined, args.concat(argsNext));\n    };\n  };\n  return curried;\n};\n\n// pipe :: (a -> b) -> (b -> ...) -> (... -> n)\nvar pipe = function pipe(fn1) {\n  for (var _len3 = arguments.length, functions = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    functions[_key3 - 1] = arguments[_key3];\n  }\n\n  return function () {\n    return functions.reduce(function (acc, fn) {\n      return fn(acc);\n    }, fn1.apply(undefined, arguments));\n  };\n};\n\n// compose :: (... -> n) -> (b -> ...) -> (a -> b)\nvar compose = function compose() {\n  for (var _len4 = arguments.length, functions = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    functions[_key4] = arguments[_key4];\n  }\n\n  return pipe.apply(undefined, _toConsumableArray(functions.reverse()));\n};\n\n// vAdd :: Vector -> Vector -> Vector\nvar vAdd = curry(function (v, v2) {\n  return [v[0] + v2[0], v[1] + v2[1]];\n});\n\n// vAdd3 :: Vector -> Vector -> Vector -> Vector\nvar vAdd3 = curry(function (v, v2, v3) {\n  return [v[0] + v2[0] + v3[0], v[1] + v2[1] + v3[1]];\n});\n\n// vAddAll :: [Vector] -> Vector\nvar vAddAll = function vAddAll(vs) {\n  return vs.reduce(vAdd, [0, 0]);\n};\n\n// vSub :: Vector -> Vector -> Vector\nvar vSub = curry(function (v, v2) {\n  return [v[0] - v2[0], v[1] - v2[1]];\n});\n\n// vSub3 :: Vector -> Vector -> Vector -> Vector\nvar vSub3 = curry(function (v, v2, v3) {\n  return [v[0] - v2[0] - v3[0], v[1] - v2[1] - v3[1]];\n});\n\n// vSubAll :: [Vector] -> Vector\nvar vSubAll = function vSubAll(vs) {\n  return vs.slice(1).reduce(vSub, vs.slice(0, 1)[0]);\n};\n\n// vMag :: Vector -> Number\nvar vMag = function vMag(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\n// vNormal :: Vector -> Vector\nvar vNormal = function vNormal(v) {\n  return [-v[1], v[0]];\n};\n\n// vScale :: Number -> Vector\nvar vScale = curry(function (sc, v) {\n  return [v[0] * sc, v[1] * sc];\n});\n\n// vTowards :: Number -> Vector -> Vector -> Vector\nvar vTowards = curry(function (t, v1, v2) {\n  var d = vSub(v2, v1);\n  var sc = vMag(d) * t;\n  return vAdd(v1, vScale(sc, vNorm(d)));\n});\n\n// vLerp :: Vector -> Vector -> Number -> Vector\nvar vLerp = curry(function (v1, v2, t) {\n  return vTowards(t, v1, v2);\n});\n\n// vNorm :: Vector -> Vector\nvar vNorm = function vNorm(v) {\n  var mag = vMag(v);\n  return [v[0] / mag, v[1] / mag];\n};\n\n// mId :: Matrix\nvar mId = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\n// vCreateMatrix :: Number -> Number -> Number -> Number -> Number -> Number -> Matrix\nvar vCreateMatrix = function vCreateMatrix() {\n  var a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var d = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var tx = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var ty = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  return [a, c, tx, b, d, ty, 0, 0, 1];\n};\n\n// vTransform :: Matrix -> Vector -> Vector\nvar vTransform = curry(function (m, v) {\n  return [v[0] * m[0] + v[1] * m[1] + m[2], v[0] * m[3] + v[1] * m[4] + m[5]];\n});\n\n// mCompose :: Matrix -> Matrix -> Matrix\nvar mCompose = curry(function (m, m2) {\n  return [m[0] * m2[0] + m[1] * m2[3] + m[2] * m2[6], m[0] * m2[1] + m[1] * m2[4] + m[2] * m2[7], m[0] * m2[2] + m[1] * m2[5] + m[2] * m2[8], m[3] * m2[0] + m[4] * m2[3] + m[5] * m2[6], m[3] * m2[1] + m[4] * m2[4] + m[5] * m2[7], m[3] * m2[2] + m[4] * m2[5] + m[5] * m2[8], m[6] * m2[0] + m[7] * m2[3] + m[8] * m2[6], m[6] * m2[1] + m[7] * m2[4] + m[8] * m2[7], m[6] * m2[2] + m[7] * m2[5] + m[8] * m2[8]];\n});\n\n// mRotate :: Number -> Matrix -> Matrix\nvar mRotate = function mRotate(a) {\n  return mCompose([Math.cos(a), -Math.sin(a), 0, Math.sin(a), Math.cos(a), 0, 0, 0, 1]);\n};\n\n// mTranslate :: Vector -> Matrix -> Matrix\nvar mTranslate = function mTranslate(v) {\n  return mCompose([1, 0, v[0], 0, 1, v[1], 0, 0, 1]);\n};\n\n// mScale :: Vector -> Matrix -> Matrix\nvar mScale = function mScale(v) {\n  return mCompose([v[0], 0, 0, 0, v[1], 0, 0, 0, 1]);\n};\n\n// mShear :: Vector -> Matrix -> Matrix\nvar mShear = function mShear(v) {\n  return mCompose([1, v[0], 0, v[1], 1, 0, 0, 0, 1]);\n};\n\n// vRotate :: Number -> Vector -> Vector\nvar vRotate = curry(function (a, v) {\n  return [v[0] * Math.cos(a) - v[1] * Math.sin(a), v[0] * Math.sin(a) + v[1] * Math.cos(a)];\n});\n\n// vRotatePointAround :: Number -> Vector -> Vector -> Vector\nvar vRotatePointAround = curry(function (a, cp, v) {\n  var v2 = vSub(v, cp);\n  return vAdd(cp, [v2[0] * Math.cos(a) - v2[1] * Math.sin(a), v2[0] * Math.sin(a) + v2[1] * Math.cos(a)]);\n});\n\n// vMidpoint :: Vector -> Vector -> Vector\nvar vMidpoint = curry(function (v, v2) {\n  return vScale(0.5, vAdd(v, v2));\n});\n\n// vAngle :: Number -> Vector\nvar vAngle = function vAngle(a) {\n  return [Math.cos(a), Math.sin(a)];\n};\n\n// vAlongAngle :: Number -> Number -> Vector\nvar vAlongAngle = curry(function (a, r, v) {\n  return compose(vAdd(v), vScale(r), vAngle)(a);\n});\n\n// vFastDist :: Vector -> Vector -> Number\nvar vFastDist = curry(function (v, v2) {\n  return Math.pow(v2[0] - v[0], 2) + Math.pow(v2[1] - v[1], 2);\n});\n\n// vDist :: Vector -> Vector -> Number\nvar vDist = curry(function (v, v2) {\n  return Math.hypot(v2[0] - v[0], v2[1] - v[1]);\n});\n\n// vDot :: Vector -> Vector -> Number\nvar vDot = curry(function (v, v2) {\n  return v[0] * v2[0] + v[1] * v2[1];\n});\n\n// vDet :: Matrix -> Number\nvar vDet = function vDet(m) {\n  return m[0] * m[4] - m[3] * m[1];\n};\n\nvar vec = {\n  add: vAdd,\n  add3: vAdd3,\n  addAll: vAddAll,\n  sub: vSub,\n  sub3: vSub3,\n  subAll: vSubAll,\n  mag: vMag,\n  normal: vNormal,\n  scale: vScale,\n  towards: vTowards,\n  lerp: vLerp,\n  norm: vNorm,\n  mId: mId,\n  createMatrix: vCreateMatrix,\n  transform: vTransform,\n  mCompose: mCompose,\n  mRotate: mRotate,\n  mTranslate: mTranslate,\n  mScale: mScale,\n  mShear: mShear,\n  rotate: vRotate,\n  rotatePointAround: vRotatePointAround,\n  midpoint: vMidpoint,\n  angle: vAngle,\n  alongAngle: vAlongAngle,\n  fastDist: vFastDist,\n  dist: vDist,\n  dot: vDot,\n  det: vDet\n};\n\n/* start exports */\nexports.default = vec;\nexports.vec = vec;\nexports.vAdd = vAdd;\nexports.vAdd3 = vAdd3;\nexports.vAddAll = vAddAll;\nexports.vSub = vSub;\nexports.vSub3 = vSub3;\nexports.vSubAll = vSubAll;\nexports.vMag = vMag;\nexports.vNormal = vNormal;\nexports.vScale = vScale;\nexports.vTowards = vTowards;\nexports.vLerp = vLerp;\nexports.vNorm = vNorm;\nexports.mId = mId;\nexports.vCreateMatrix = vCreateMatrix;\nexports.vTransform = vTransform;\nexports.mCompose = mCompose;\nexports.mRotate = mRotate;\nexports.mTranslate = mTranslate;\nexports.mScale = mScale;\nexports.mShear = mShear;\nexports.vRotate = vRotate;\nexports.vRotatePointAround = vRotatePointAround;\nexports.vMidpoint = vMidpoint;\nexports.vAngle = vAngle;\nexports.vAlongAngle = vAlongAngle;\nexports.vFastDist = vFastDist;\nexports.vDist = vDist;\nexports.vDot = vDot;\nexports.vDet = vDet;\n/* end exports */","const LAYERS = Object.freeze({\n  HUD: 0,\n  BG : 1,\n  MG : 2,\n  FG : 3\n});\n\nmodule.exports = Object.freeze({\n  LAYERS\n});\n","const posToGridIndex = ([x, y], gw) => {\n  return x + gw * y;\n};\n\nconst posFromGridIndex = (i, gw) => [(i % gw)|0, (i / gw)|0];\n\nconst pick = (props, obj) => {\n  const out = {};\n  for (const p of props) {\n    out[p] = obj[p];\n  }\n  return out;\n};\n\nconst fromify = cons => (...args) => new cons(...args);\n\nmodule.exports = {\n  posToGridIndex,\n  posFromGridIndex,\n  pick,\n  fromify\n};\n","class GameState {\n  constructor() {\n    this.state = {};\n  }\n\n  load(state) {\n    this.state = state;\n  }\n\n  serialize() {\n    return this.state;\n  }\n}\n\nmodule.exports = GameState;\n","class Input {\n  constructor() {\n    this.keyStates = {};\n    const keydownHandler = e => {\n      if (!this.keyStates[e.key]) {\n        this.keyStates[e.key] = {\n          state: true,\n          downThisFrame: true,\n          upThisFrame: false\n        };\n        return;\n      }\n\n      this.keyStates[e.key].state = true;\n      this.keyStates[e.key].downThisFrame = true;\n      this.keyStates[e.key].upThisFrame = false;\n    };\n\n    const keyupHandler = e => {\n      if (!this.keyStates[e.key]) {\n        this.keyStates[e.key] = {\n          state: false,\n          downThisFrame: false,\n          upThisFrame: true\n        };\n        return;\n      }\n\n      this.keyStates[e.key].state = false;\n      this.keyStates[e.key].downThisFrame = false;\n      this.keyStates[e.key].upThisFrame = true;\n    };\n\n    document.addEventListener('keydown', keydownHandler);\n    document.addEventListener('keyup', keyupHandler);\n\n    this.cleanup = () => {\n      document.removeEventListener('keydown', keydownHandler);\n      document.removeEventListener('keyup', keyupHandler);\n    };\n  }\n\n  keyIsDown(key) {\n    if (!(key in this.keyStates)) {\n      this.keyStates[key] = {\n        state: false,\n        downThisFrame: false,\n        upThisFrame: false\n      };\n      return false;\n    }\n    return this.keyStates[key].state;\n  }\n\n  keyPressed(key) {\n    return this.keyIsDown(key) && this.keyStates.downThisFrame;\n  }\n\n  keyReleased(key) {\n    return !this.keyIsDown(key) && this.keyStates.upThisFrame;\n  }\n\n  update() {\n    Object.values(this.keyStates).forEach(ks => {\n      ks.downThisFrame = false;\n      ks.upThisFrame = false;\n    });\n  }\n}\n\nmodule.exports = Input;","class PubSub {\n  constructor() {\n    this.topics = {};\n    this._nextId = 0;\n  }\n\n  nextId() {\n    return this._nextId++;\n  }\n\n  subscribe(topic, handler) {\n    if (!(topic in this.topics)) {\n      this.topics[topic] = {};\n    }\n\n    const fixedId = this.nextId();\n    this.topics[topic][fixedId] = handler;\n\n    return () => {\n      delete this.topics[topic][fixedId];\n    }\n  }\n\n  publish(topic, data) {\n    if (topic in this.topics) {\n      Object.values(this.topics[topic]).forEach(fn => fn(data));\n    }\n  }\n}\n\nmodule.exports = PubSub;\n","const {pick} = require('./util');\n\nconst FONT = `'Source Code Pro', monospace`;\n\nclass Renderer {\n  constructor(canvas, canvasWidth, canvasHeight) {\n    canvas.height = canvasHeight;\n    canvas.width = canvasWidth;\n\n    this._styleStack = [];\n    this.ctx = canvas.getContext('2d');\n    this.ctx.textBaseline = 'top';\n\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n\n    this.setTileSize(20);\n\n    this.buffers = [ [], [], [], [] ];\n  }\n\n  commit() {\n    this.pushStyle();\n    for (let i = 0; i < this.buffers.length; i++) {\n      while (this.buffers[i].length) {\n        const {pos, color, char, draw} = this.buffers[i].pop();\n        if (draw) {\n          this.ctx.fillStyle = color;\n          this.ctx.fillText(char, pos[0], pos[1]);\n        }\n      }\n    }\n    this.popStyle();\n  }\n\n  pushStyle() {\n    const props = ['fillStyle', 'strokeStyle', 'font', 'filter', 'lineWidth'];\n    this._styleStack.push(pick(props, this.ctx));\n  }\n\n  popStyle() {\n    if (this._styleStack.length > 0) {\n      const entries = Object.entries(this._styleStack.pop());\n      for (const [key, value] of entries) {\n        this.ctx[key] = value;\n      }\n    } else {\n      throw new RangeError(`No styles to pop in the stack`);\n    }\n  }\n\n  setTileSize(size) {\n    if (size !== this.size) {\n      this.size = size;\n      this.ctx.font = `${this.size}px ${FONT}`;\n    }\n  }\n\n  clearBackground(col) {\n    this.pushStyle();\n    this.ctx.fillStyle = col;\n    this.ctx.beginPath()\n    this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.ctx.fill();\n    this.ctx.closePath();\n    this.popStyle();\n  }\n\n  drawTile({char, color, zPos}, pos) {\n    this.buffers[zPos].unshift({\n      pos,\n      char,\n      color,\n      draw: true\n    });\n  }\n\n  drawRect(fill, stroke, [x, y], w, h, strokeWeight = 1) {\n    this.pushStyle();\n    this.ctx.fillStyle = fill;\n    this.ctx.strokeStyle = stroke;\n    this.ctx.lineWidth = strokeWeight;\n\n    this.ctx.fillRect(x, y, w, h);\n    this.ctx.rect(x, y, w, h);\n    this.ctx.stroke();\n    this.popStyle();\n  }\n\n  drawCircle(fill, stroke, [x, y], r, strokeWeight = 1) {\n    this.pushStyle();\n    this.ctx.fillStyle = fill;\n    this.ctx.strokeStyle = stroke;\n    this.ctx.lineWidth = strokeWeight;\n\n    this.ctx.beginPath();\n    this.ctx.ellipse(x, y, r, r, 0, 0, Math.PI*2, false);\n    this.ctx.stroke();\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    this.popStyle();\n  }\n}\n\nmodule.exports = Renderer;\n","const {vAdd, vScale} = require('vec-la-fp');\n\nconst GameState = require('./GameState');\nconst Input = require('./Input');\nconst PubSub = require('./PubSub');\nconst Renderer = require('./Renderer');\nconst {posToGridIndex} = require('./util');\n\nclass Game {\n  constructor(canvasId, canvasWidth, canvasHeight) {\n    const events = new PubSub();\n    this.subscribe = events.subscribe.bind(events);\n    this.publish = events.publish.bind(events);\n\n    const canvas = document.getElementById(canvasId);\n    this.renderer = new Renderer(canvas, canvasWidth, canvasHeight);\n\n    this.area = null;\n\n    this.input = new Input();\n    this.state = new GameState();\n\n    this.deltaTime = 0;\n    this.lastTime = Date.now();\n    this.frames = 0;\n    this.boundDraw = this.draw.bind(this);\n\n    this.onUpdate = () => {};\n    this.onDraw = () => {};\n  }\n\n  createScreenRegion(pos, getTileSize) {\n    return tileXY => vAdd(vScale(getTileSize(), tileXY), pos);\n  }\n\n  setCurrentArea(area) {\n    this.area = area;\n    this.renderer.setTileSize(area.size);\n  }\n\n  getTile(pos) {\n    const [x, y] = pos;\n    const {width:w, height:h} = this.area;\n    if (x >= w || y >= h || x < 0 || y < 0) return null;\n    const index = posToGridIndex(pos, w)\n    return this.area.grid[index];\n  }\n\n  start() {\n    requestAnimationFrame(this.boundDraw);\n  }\n\n  draw() {\n    this.deltaTime += Date.now() - this.lastTime;\n    if (this.deltaTime >= 16) {\n      this.deltaTime = 0;\n      this.frames++;\n\n      this.publish('@@FRAME_BEFORE_UPDATE');\n      this.onUpdate();\n\n      this.publish('@@FRAME_BEFORE_DRAW');\n      this.onDraw();\n\n      this.publish('@@FRAME_BEFORE_RENDER_COMMIT');\n      this.renderer.commit();\n\n      // Reset the frame values for input\n      this.input.update();\n\n      this.publish('@@FRAME_COMPLETE');\n    }\n\n    requestAnimationFrame(this.boundDraw);\n  }\n}\n\nmodule.exports = Game;\n","const {posToGridIndex, fromify} = require('./util');\n\nclass Area {\n  constructor(width, height, offset, size) {\n    this.width = width;\n    this.height = height;\n    this.offset = offset;\n    this.size = size;\n\n    this.grid = [];\n\n    this.actors = [];\n\n    this.items = [];\n\n    this.handlers = {};\n  }\n\n  setGrid(grid) {\n    this.grid = grid;\n  }\n\n  setGridAtPos(tile, pos) {\n    const i = posToGridIndex(pos, this.width);\n    if (i >= this.grid.length) {\n      throw new RangeError(`Can't set out of range index ${i} (${x}, ${y}) on grid with only ${this.grid.length} tiles`);\n    }\n    this.grid[i] = tile;\n  }\n}\n\nArea.from = fromify(Area);\n\nmodule.exports = Area;\n","const {fromify} = require('./util');\nconst {LAYERS} = require('./constants');\n\nclass Tile {\n  constructor(char, color, zPos = LAYERS.BG) {\n    this.char = char;\n    this.color = color;\n    this.zPos = zPos;\n    this.properties = [];\n  }\n\n  hasProperty(prop) {\n    return this.properties.includes(prop);\n  }\n\n  addProperty(prop) {\n    this.properties.push(prop);\n    return this;\n  }\n}\n\nTile.from = fromify(Tile);\n\nmodule.exports = Tile;\n","const {vAdd} = require('vec-la-fp');\n\nclass Animation {\n  constructor(timeline, animationLength, pos, times = 1, loop = false) {\n    this.timeline = timeline;\n    this.active = false;\n    this.pos = pos;\n    this.frame = 0;\n    this.animationLength = animationLength;\n    this.loop = loop;\n    this.times = times;\n    this.onComplete = null;\n  }\n\n  start() {\n    this.active = true;\n  }\n\n  stop() {\n    this.active = false;\n  }\n\n  reset() {\n    this.active = false;\n    this.frame = 0;\n  }\n\n  draw(game, tileToScreen) {\n    if (this.active) {\n      const ai = Math.floor(this.frame / (this.animationLength / (this.timeline.length * this.times))) % this.timeline.length;\n\n      const frame = this.timeline[ai];\n      frame.forEach(({tile, pos}) => {\n        const screenPos = tileToScreen(vAdd(pos, this.pos));\n        game.renderer.drawTile(tile, screenPos);\n      });\n\n      this.frame++;\n      if (this.frame >= this.animationLength) {\n        if (this.loop) {\n          this.frame = 0;\n        } else {\n          this.reset();\n          if (typeof this.onComplete === 'function') {\n            this.onComplete();\n          }\n        }\n      }\n    }\n  }\n\n  clone() {\n    return new Animation(\n      this.timeline,\n      this.animationLength,\n      this.pos,\n      this.loop\n    );\n  }\n}\n\nmodule.exports = Animation;\n","const {vAdd} = require('vec-la-fp');\nconst {LAYERS} = require('asc-engine/src/constants');\nconst {posFromGridIndex} = require('asc-engine/src/util');\nconst Game = require('asc-engine/src/Game');\nconst Area = require('asc-engine/src/Area');\nconst Tile = require('asc-engine/src/Tile');\nconst Animation = require('asc-engine/src/Animation');\n\nconst game = new Game('main', 1000, 700);\nconst toGameArea = game.createScreenRegion([19*20, 4*20], () => game.area.size);\nconst toTitleArea = game.createScreenRegion([0, 0], () => game.area.size);\nconst toScoreArea = game.createScreenRegion([40*20, 0], () => game.area.size);\n\nconst title = new Tile('T . E . T . R . I . S', '#f11', LAYERS.HUD);\nconst score = new Tile('Score: 0', '#0f0', LAYERS.HUD);\nscore.score = 0;\nscore.update = x => {\n  score.score += x;\n  score.char = `Score: ${score.score}`;\n};\n\n\nconst PAW = 10;\nconst PAH = 23;\n\nconst createLineAnimation = y => new Animation(\n  Array.from({length: PAW+1}, (_, i) => [{\n    tile: new Tile('#', '#ffffff', LAYERS.HUD),\n    pos: [i, 0]\n  }]),\n  15,\n  [0, y],\n  1,\n  false\n);\n\nconst animations = [];\n\nconst FRAME_TIME = 16.6;\nlet lastTime = Date.now();\nlet currentTime = lastTime;\n\nconst moduloAddition = (a, b, c) => {\n  if (b < 0) {\n    b = c - (Math.abs(b));\n  }\n  return (a + b) % c;\n};\n\nconst pieces = [\n  [\n    [\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 0, 1],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [1, 0, 0],\n    ],\n  ],\n  [\n    [\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n    [\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 0, 1],\n    ],\n  ],\n  [\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1],\n    ],\n    [\n      [1, 1, 1],\n      [1, 0, 0],\n      [0, 0, 0],\n    ],\n    [\n      [1, 1, 0],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n    [\n      [0, 0, 1],\n      [1, 1, 1],\n      [0, 0, 0],\n    ],\n  ],\n  [\n    [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0],\n    ],\n    [\n      [1, 1, 1],\n      [0, 0, 1],\n    ],\n    [\n      [0, 1, 1],\n      [0, 1, 0],\n      [0, 1, 0],\n    ],\n    [\n      [1, 0, 0],\n      [1, 1, 1],\n    ],\n  ],\n  [\n    [\n      [1, 1, 0],\n      [1, 1, 0],\n    ],\n    [\n      [1, 1, 0],\n      [1, 1, 0],\n    ],\n    [\n      [1, 1, 0],\n      [1, 1, 0],\n    ],\n    [\n      [1, 1, 0],\n      [1, 1, 0],\n    ],\n  ],\n  [\n    [\n      [0, 1],\n      [0, 1],\n      [0, 1],\n      [0, 1],\n    ],\n    [\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n    ],\n    [\n      [0, 1],\n      [0, 1],\n      [0, 1],\n      [0, 1],\n    ],\n    [\n      [0, 0, 0, 0],\n      [1, 1, 1, 1],\n    ],\n  ],\n  [\n    [\n      [0, 1, 0],\n      [1, 1, 1],\n    ],\n    [\n      [0, 1, 0],\n      [0, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [1, 1, 1],\n      [0, 1, 0],\n    ],\n    [\n      [0, 1, 0],\n      [1, 1, 0],\n      [0, 1, 0],\n    ],\n  ],\n];\n\nconst instanceTiles = [\n  new Tile('$', '#ff0000', LAYERS.FG),\n  new Tile('%', '#00ff00', LAYERS.FG),\n  new Tile('&', '#ff00ff', LAYERS.FG),\n]\n\nlet nextPiece = pieces[(Math.random()*pieces.length)|0];\nlet nextTile = instanceTiles[(Math.random()*instanceTiles.length)|0];\nconst instance = {\n  piece: null,\n  state: null,\n  pos: null,\n  tile: null,\n  next: () => {\n    instance.piece = nextPiece;\n    nextPiece = pieces[(Math.random()*pieces.length)|0];\n    instance.tile = nextTile;\n    nextTile = instanceTiles[(Math.random()*instanceTiles.length)|0];\n    instance.pos = [5, 0];\n    instance.state = 0;\n  }\n};\ninstance.next();\n\nlet gameState = Array.from({length:PAH}, () => Array.from({length:PAW}));\n\nconst keyStates = {}\n\nconst lockedKeyAction = (key, action) => {\n  if (game.input.keyIsDown(key) && !keyStates[key]) {\n    keyStates[key] = true;\n    action();\n  }\n};\n\nconst updateLockStates = () => {\n  Object.keys(keyStates).forEach(ks => {\n    if (!game.input.keyIsDown(ks)) {\n      keyStates[ks] = false;\n    }\n  });\n}\n\nconst checkCollision = (pos, state) => {\n  let collision = {\n    blocked: false,\n  };\n\n  instance.piece[state].forEach((row, y) => {\n    return row.forEach((cell, x) => {\n      if (cell === 0) return;\n\n      const [nx, ny] = vAdd(pos, [x, y]);\n\n      if (nx === 0 || nx === PAW+1) {\n        collision.blocked = true;\n        return;\n      }\n\n      if (ny === PAH || gameState[ny][nx-1]) {\n        collision.blocked = true;\n      }\n    });\n  });\n  return collision;\n}\n\ngame.onUpdate = function () {\n  let mLeft, mRight, rLeft, rRight;\n  lockedKeyAction('z', () => rLeft = true);\n  lockedKeyAction('x', () => rRight = true);\n  lockedKeyAction('ArrowLeft', () => mLeft = true);\n  lockedKeyAction('ArrowRight', () => mRight = true);\n  updateLockStates();\n\n  if (mLeft) {\n    const nextPos = vAdd(instance.pos, [-1, 0]);\n    const collision = checkCollision(nextPos, instance.state);\n    if (!collision.blocked) {\n      instance.pos = nextPos;\n    }\n  } else if (mRight) {\n    const nextPos = vAdd(instance.pos, [1, 0]);\n    const collision = checkCollision(nextPos, instance.state);\n    if (!collision.blocked) {\n      instance.pos = nextPos;\n    }\n  } else if (rLeft) {\n    const nextState = moduloAddition(instance.state, -1, instance.piece.length);\n    const collision = checkCollision(instance.pos, nextState);\n    if (!collision.blocked) {\n      instance.state = nextState;\n    }\n  } else if (rRight) {\n    const nextState = moduloAddition(instance.state, 1, instance.piece.length);\n    const collision = checkCollision(instance.pos, nextState);\n    if (!collision.blocked) {\n      instance.state = nextState;\n    }\n  }\n\n  const rate = game.input.keyIsDown('ArrowDown') ? 5 : 30;\n\n  currentTime = Date.now();\n  if (currentTime - lastTime >= FRAME_TIME * rate) {\n    lastTime = currentTime;\n\n    score.update(30 / rate);\n\n    instance.pos = vAdd(instance.pos, [0, 1]);\n    const collision = checkCollision(instance.pos, instance.state);\n\n    if (collision.blocked) {\n      instance.piece[instance.state].forEach((row, y) => {\n        row.forEach((cell, x) => {\n          if (cell === 1) {\n            const [nx, ny] = vAdd(instance.pos, [x, y]);\n            gameState[ny-1][nx-1] = instance.tile;\n          }\n        })\n      });\n      instance.next();\n    }\n\n    let lines = 0;\n    for (let i = gameState.length-1; i >= 0; i--) {\n      const filled = gameState[i].every(Boolean);\n      if (filled) {\n        gameState.splice(i, 1);\n\n        const ani = createLineAnimation(i - lines);\n        ani.start();\n        animations.push(ani);\n\n        lines++;\n      }\n    }\n\n    if (lines) {\n      for (let i = 0; i < lines; i++) {\n        gameState.unshift(Array.from({length: PAW}));\n      }\n      const bonus = lines === 5 ? 500 : 0;\n      score.update(Math.round(100 * lines**1.25) + bonus);\n    }\n\n    if (gameState[0].some(Boolean)) {\n      score.score = 0;\n      score.update(0);\n      gameState = Array.from({length: PAH}, () => Array.from({length: PAW}));\n    }\n  }\n\n  for (let i = animations.length - 1; i >= 0; i--) {\n    if (!animations[i].active) {\n      animations.splice(i, 1);\n      continue;\n    }\n  }\n};\n\ngame.onDraw = function () {\n  this.renderer.clearBackground('#000000');\n  this.renderer.setTileSize(this.area.size);\n\n  this.area.grid.forEach((t, i) => {\n    const pos = toGameArea(\n      posFromGridIndex(i, this.area.width, this.area.height)\n    );\n    this.renderer.drawTile(t, pos);\n  });\n\n  instance.piece[instance.state].forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell === 1) {\n        const pos = toGameArea(vAdd(instance.pos, [x, y]));\n        game.renderer.drawTile(instance.tile, pos);\n      }\n    })\n  });\n\n  gameState.forEach((row, y) =>\n    row.forEach((tile, x) => {\n      if (tile) game.renderer.drawTile(tile, toGameArea([x+1, y]))\n    })\n  );\n\n  nextPiece[0].forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell === 1) {\n        const pos = toGameArea(vAdd([20, 5], [x, y]));\n        game.renderer.drawTile(nextTile, pos);\n      }\n    })\n  });\n\n  animations.forEach(a => a.draw(game, toGameArea));\n\n  game.renderer.drawTile(title, toTitleArea([1, 1]));\n  game.renderer.drawTile(score, toScoreArea([0, 1]));\n}\n\nconst S = Tile.from('#', '#999999');\nS.addProperty('SOLID');\nconst F = Tile.from('.', '#333333');\nconst tiles = [\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,F,F,F,F,F,F,F,F,F,F,S,\n  S,S,S,S,S,S,S,S,S,S,S,S,\n];\n\nconst gameArea = new Area(PAW + 2, PAH + 2, [0, 0], 25);\n\ngameArea.setGrid(tiles);\ngame.setCurrentArea(gameArea);\ngame.start();\n"]}